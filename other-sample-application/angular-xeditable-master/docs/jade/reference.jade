p List of all possible attributes, properties and methods.

mixin methods(items)
  - items = items.sort(function(a,b){return a.name > b.name ? 1 : -1})
  table.table-bordered.table-condensed(width="100%")
    thead
      tr
        th(width="15%") Method
        th(width="35%") Params
        th Description
    tbody
      each a in items
        tr
          td: code= a.name
          td
            if a.parameters.length
              each p in a.parameters
                strong= p.name
                i= ' ('+p.type+') '
                = p.description
                br
            else
              i none    
          td!= md(a.description)

mixin props(items)
  - items.sort(function(a,b){return a.name > b.name ? 1 : -1})
  table.table-bordered.table-condensed(width="100%")
    thead
      tr
        th(width="15%") Name
        th(width="15%") Type
        th Description
    tbody
      each a in items
        tr
          td: code= a.name
          td= a.type.names[0]          
          td!= md(a.description)          



section#ref-element
h2 Reference: editable element
- var ns = jsdoc.namespaces && jsdoc.namespaces.length ? jsdoc.namespaces.filter(function(v){return v.name === 'editable-element'})[0] : []

h3 Attributes
:markdown
  Attributes can be defined for any element having `editable-xxx` directive:
pre.prettyprint(ng-non-bindable)
  = '<a href="#" editable-text="user.name" [attributes]> {{user.name | "empty"}} </a>'
- var items = ns.properties ? ns.properties.filter(function(v){return ~v.type.names.indexOf('attribute')}) : []
+props(items)




section#ref-form
h2 Reference: editable form
- var ns = jsdoc.namespaces && jsdoc.namespaces.length ? jsdoc.namespaces.filter(function(v){return v.name === 'editable-form'})[0] : []

h3 Attributes
:markdown
  Attributes can be defined as:
pre.prettyprint
  = '<form editable-form name="myform" [attributes]>\n'
  = '...\n'
  = '</form>\n'
- var items = ns.properties ? ns.properties.filter(function(v){return ~v.type.names.indexOf('attribute')}) : []
+props(items)


h3 Properties
:markdown
  Properties are available when you set `name` attribute of form: 
pre.prettyprint
  = '<form editable-form name="myform">\n'
  = '// now myform[property] is available in template and $scope.myform[property] - in controller\n'
- var items = ns.properties ? ns.properties.filter(function(v){return !~v.type.names.indexOf('attribute')}) : []
+props(items)


h3 Methods
:markdown
  Methods are available when you set `name` attribute of form:
pre.prettyprint
  = '<form editable-form name="myform">\n'
  = '// now myform[method] is available in template and $scope.myform[method] - in controller\n'
- items = ns.functions || []  
+methods(items)




section#ref-options
h2 Reference: editable options
- var ns = jsdoc.namespaces && jsdoc.namespaces.length ? jsdoc.namespaces.filter(function(v){return v.name === 'editable-options'})[0] : []

h3 Options
:markdown
  Options are set in app.run
pre.prettyprint
  = 'app.run(function(editableOptions) {\n'
  = 'editableOptions.theme = \'bs3\';\n'
  = '...\n'
  = '});\n'
- var items = ns.properties ? ns.properties.filter(function(v){return !~v.type.names.indexOf('attribute')}) : []
+props(items)

