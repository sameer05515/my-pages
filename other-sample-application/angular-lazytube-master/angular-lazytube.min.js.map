{"version":3,"sources":["angular-lazytube.min.js"],"names":["angular","module","factory","width","height","responsive","urlParams","autoplay","run","$templateCache","put","directive","$sce","$window","obLazytubeConfig","element","document","find","prepend","get","urlPattern","paramNames","split","restrict","templateUrl","replace","transclude","scope","link","$scope","$element","$attrs","id","obLazytube","url","href","src","ngSrc","r","match","protocol","location","attr","isDefined","noResponsive","wrapperStyle","placeholderStyle","backgroundImage","obPlaceholder","paddingBottom","showVideo","$event","params","copy","forEach","key","val","push","encodeURIComponent","embedUrl","trustAsResourceUrl","join","active","preventDefault"],"mappings":"AAAAA,QAAQC,OAAO,oBACb,6BACA,0BACA,+BAIFD,QAAQC,OAAO,8BACfC,QAAQ,mBAAoB,WAC1B,OACEC,MAAO,IACPC,OAAQ,IACRC,YAAY,EACZC,WACEC,SAAU,MAMhBP,QAAQC,OAAO,iCAAkCO,KAAK,iBAAkB,SAASC,GAAiBA,EAAeC,IAAI,oCAAoC,gaACzJD,EAAeC,IAAI,iCAAiC,osBAEpDV,QAAQC,OAAO,8BAA+B,4BAC9CU,UAAU,cAAe,OAAQ,UAAW,iBAAkB,mBAAoB,SAASC,EAAMC,EAASJ,EAAgBK,GAExHd,QAAQe,QAAQC,UAAUC,KAAK,QAAQC,QAAQT,EAAeU,IAAI,kCAGlE,IAAIC,GAAa,0HAGbC,EAAa,iMAAiMC,MAAM,IAExN,QACEC,SAAU,IACVC,YAAa,oCACbC,SAAS,EACTC,YAAY,EACZC,OAAO,EACPC,KAAM,SAASC,EAAQC,EAAUC,GAC/B,GAAIC,GAAKD,EAAOE,UAChB,KAAID,EAAI,CACN,GAAIE,GAAMH,EAAOI,MAAQJ,EAAOK,KAAOL,EAAOM,KAC9C,KAAIH,EACF,MAEF,IAAII,GAAIJ,EAAIK,MAAMnB,EAClB,KAAKkB,EACH,MAEFN,GAAKM,EAAE,GAGTT,EAAOG,GAAKA,CACZ,IAAIQ,GAAyC,WAA9B3B,EAAQ4B,SAASD,SAAwB,SAAW,QAC/DrC,EAAQ0B,EAAO1B,MAAQ2B,EAASY,KAAK,UAAY5B,EAAiBX,MAClEC,EAASyB,EAAOzB,OAAS0B,EAASY,KAAK,WAAa5B,EAAiBV,OACrEC,EAAawB,EAAOxB,WAAaL,QAAQ2C,UAAUZ,EAAOa,eAAgB,EAAQ9B,EAAiBT,UAEvGwB,GAAOgB,gBACPhB,EAAOiB,kBACLC,gBAAiBhB,EAAOiB,cAAgB,OAASjB,EAAOiB,cAAgB,IAAM,OAASR,EAAW,oBAAsBR,EAAK,mBAG5H3B,EACDwB,EAAOgB,aAAaI,cAAgB,IAAM7C,EAAOD,EAAQ,KAEzD0B,EAAOiB,iBAAiB3C,MAAQA,EAAQ,KACxC0B,EAAOiB,iBAAiB1C,OAASA,EAAS,MAG5CyB,EAAOqB,UAAY,SAASC,GAE1B,GAAIC,GAASpD,QAAQqD,KAAKvC,EAAiBR,UAC3CN,SAAQsD,QAAQjC,EAAY,SAASkC,GACnC,GAAIC,GAAMzB,EAAOwB,EACdvD,SAAQ2C,UAAUa,KACnBJ,EAAOG,GAAOC,IAGlB,IAAIlD,KACJN,SAAQsD,QAAQF,EAAQ,SAASI,EAAKD,GACpCjD,EAAUmD,KAAKF,EAAM,IAAMG,mBAAmBF,MAIhD3B,EAAO8B,SAAW/C,EAAKgD,mBAAmBpB,EAAW,2BAA6BR,EAAK,KAAO1B,EAAUuD,KAAK,MAC7GhC,EAAOiC,QAAS,EAChBX,EAAOY","file":"angular-lazytube.min.js","sourcesContent":["angular.module('oblador.lazytube', [\n  'oblador.lazytube.templates', \n  'oblador.lazytube.config', \n  'oblador.lazytube.directive'\n]);\n\n\nangular.module('oblador.lazytube.config', []).\nfactory('obLazytubeConfig', function() {\n  return {\n    width: 560, \n    height: 315,\n    responsive: true, \n    urlParams: { \n      autoplay: 1\n    }\n  };\n});\n\n\nangular.module(\"oblador.lazytube.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"templates/lazytube/directive.html\",\"<div class=\\\"yt-wrap\\\" ng-class=\\\"{\\'yt-responsive\\' : responsive }\\\" ng-style=\\\"wrapperStyle\\\"><a ng-href=\\\"http://www.youtube.com/watch?v={{id}}\\\" ng-click=\\\"showVideo($event)\\\" ng-show=\\\"!active\\\" ng-style=\\\"placeholderStyle\\\" class=\\\"yt-placeholder\\\"><i class=\\\"yt-btn\\\"></i></a><iframe class=\\\"yt-embed\\\" ng-if=\\\"active\\\" width=\\\"{{width}}\\\" height=\\\"{{height}}\\\" ng-src=\\\"{{embedUrl}}\\\" frameborder=\\\"0\\\" allowfullscreen></iframe></div>\");\n$templateCache.put(\"templates/lazytube/styles.html\",\"<style type=\\\"text/css\\\">.yt-responsive{position:relative;padding-bottom:56.25%;height:0;overflow:hidden;max-width:100%}.yt-placeholder{display:block;position:relative;background:#000 no-repeat 50% 50%;background-size:cover;margin:4px 0}.yt-responsive .yt-embed,.yt-responsive .yt-placeholder{position:absolute;top:0;left:0;width:100%;height:100%;margin:0}.yt-btn:before{content:\\\"\\\\25B6\\\\FE0E\\\";color:#fff;font-family:Helvetica,sans-serif}.yt-btn{position:absolute;left:50%;top:50%;width:84px;line-height:58px;margin:-29px 0 0 -42px;font-style:normal;background:#000;background:rgba(0,0,0,.8);text-align:center;font-size:28px;border-radius:10px;text-indent:5px}a:hover .yt-btn{background:#cc181e}</style>\");}]);\n\nangular.module('oblador.lazytube.directive', ['oblador.lazytube.config']).\ndirective('obLazytube', [\"$sce\", \"$window\", \"$templateCache\", \"obLazytubeConfig\", function($sce, $window, $templateCache, obLazytubeConfig){\n  //Inject base styles\n  angular.element(document).find('head').prepend($templateCache.get('templates/lazytube/styles.html'));\n\n  //Valid youtube URL pattern\n  var urlPattern = /^(?:(https?:)?\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n\n  //Valid attributes that will be passed on to youtube via the query string\n  var paramNames = 'autohide autoplay cc_load_policy color controls disablekb enablejsapi end fs iv_load_policy list listType loop modestbranding origin playerapiid playlist playsinline rel showinfo start theme'.split(' ');\n\n  return {\n    restrict: 'A',\n    templateUrl: 'templates/lazytube/directive.html',\n    replace: true,\n    transclude: true,\n    scope: true,\n    link: function($scope, $element, $attrs) {\n      var id = $attrs.obLazytube;\n      if(!id) {\n        var url = $attrs.href || $attrs.src || $attrs.ngSrc;\n        if(!url) {\n          return;\n        }\n        var r = url.match(urlPattern);\n        if (!r) {\n          return;\n        }\n        id = r[2];\n      }\n\n      $scope.id = id;\n      var protocol = $window.location.protocol === 'https:' ? 'https:' : 'http:';\n      var width = $scope.width = $element.attr('width') || obLazytubeConfig.width;\n      var height = $scope.height = $element.attr('height') || obLazytubeConfig.height;\n      var responsive = $scope.responsive = angular.isDefined($attrs.noResponsive) ? false : obLazytubeConfig.responsive;\n\n      $scope.wrapperStyle = {};\n      $scope.placeholderStyle = {\n        backgroundImage: $attrs.obPlaceholder ? 'url(' + $attrs.obPlaceholder + ')' : 'url(' + protocol + '//i.ytimg.com/vi/' + id + '/hqdefault.jpg)'\n      };\n\n      if(responsive) {\n        $scope.wrapperStyle.paddingBottom = 100 * height/width + '%';\n      } else {\n        $scope.placeholderStyle.width = width + 'px';\n        $scope.placeholderStyle.height = height + 'px';\n      }\n\n      $scope.showVideo = function($event) {\n        //Build query params by checking for attributes\n        var params = angular.copy(obLazytubeConfig.urlParams);\n        angular.forEach(paramNames, function(key) {\n          var val = $attrs[key];\n          if(angular.isDefined(val)) {\n            params[key] = val;\n          }\n        });\n        var urlParams = [];\n        angular.forEach(params, function(val, key) {\n          urlParams.push(key + '=' + encodeURIComponent(val));\n        });\n\n        //We regex checked ID so url should be safe. \n        $scope.embedUrl = $sce.trustAsResourceUrl(protocol + '//www.youtube.com/embed/' + id + '/?' + urlParams.join('&'));\n        $scope.active = true;\n        $event.preventDefault();\n      };\n    }\n  };\n}]);\n"],"sourceRoot":"/source/"}